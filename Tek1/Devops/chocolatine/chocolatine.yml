name: chocolatine
##opened, synchronize, reopened, closed
on:
    push:
      branches:
        - '**'
    pull_request:
        types: [opened, reopened]

#########################################

jobs:
  checking_coding_style:
    if: ${{ ! startsWith(github.ref, 'refs/heads/ga-ignore-') }} && github.repository != env.MIRROR_URL
    name: checking_coding_style
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run coding style checker
        run: check.sh $(pwd) $(pwd)

      - name: Display coding style errors
        run: |
          python3 - <<EOF
          with open("coding-style-reports.log", "r") as f:
              lines = f.readlines()

          has_error = False

          for line in lines:
              parts = line.strip().split(":")
              if len(parts) < 4:
                  continue

              file_path = parts[0].lstrip("./")
              line_number = parts[1]
              level = parts[2].strip()
              code = parts[3].strip()

              print(f"::error file={file_path},line={line_number},title={level} Coding style error::{code}")
              has_error = True

          if has_error:
              exit(1)
          EOF

#############################################

  check_program_compilation:
    needs: checking_coding_style
    name: check_program_compilation
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Make 
        run : timeout 2 make

      - name: Make clean 
        run : make clean
      
      - name: Check if binary exists
        run : echo "papa"

      - name: Check if binary executables
        run : echo "zizi"
############################################

  run_tests:
    needs: [checking_coding_style, check_program_compilation]
    name: run_tests
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests (timeout 2 minutes)
        run: timeout 120 make tests_run

#############################################

  push_to_mirror:
    if: github.event_name == 'push'
    needs: [checking_coding_style, check_program_compilation, run_tests]
    name: push_to_mirror
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.SSH_KEY_CHOCOLATINE }}


    
